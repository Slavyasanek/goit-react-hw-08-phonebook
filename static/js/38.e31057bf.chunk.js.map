{"version":3,"file":"static/js/38.e31057bf.chunk.js","mappings":"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","sources":["components/StyledInput/StyledInput.jsx","pages/Login.jsx"],"sourcesContent":["import { Input } from \"@chakra-ui/react\"\n\nexport const StyledInput = ({ type, placeholder, name, value, onChange, pattern, minLength, id }) => {\n    return (<>\n        <Input type={type} required\n            colorScheme=\"teal\"\n            variant={'outline'}\n            placeholder={placeholder}\n            focusBorderColor=\"teal.500\"\n            maxW={{ base: '350px', md: '400px', xl: '550px' }}\n            fontSize={'20px'}\n            p={'15px 20px'}\n            h={'60px'}\n            border={'2px'}\n            borderColor={'teal.200'}\n            outline={'none'}\n            _hover={{\n                borderColor: 'teal.300'\n            }} \n            name={name}\n            value={value}\n            onChange={onChange}\n            pattern={pattern}\n            minLength={minLength}\n            id={id}/>\n    </>)\n}","import { Flex, Center, FormControl, InputRightElement, Button, Heading, FormLabel, InputGroup } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { selectIsLoggedIn } from \"redux/auth/selectors\";\nimport { StyledInput } from \"components/StyledInput/StyledInput\";\nimport { UserLogIn } from \"redux/auth/operations\";\nimport { nanoid } from \"nanoid\";\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [show, setShow] = useState(false);\n    const dispatch = useDispatch();\n    const handleShow = () => setShow(!show);\n\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    if (isLoggedIn) {\n        return <Navigate to={'/contacts'} />\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const user = { email, password };\n        console.log(user);\n        dispatch(UserLogIn(user));\n        reset();\n    }\n\n    const handleChange = ({ target }) => {\n        if (target.name === 'email') {\n            setEmail(target.value);\n        } else if (target.name === 'password') {\n            setPassword(target.value)\n        }\n    }\n\n    const reset = () => {\n        setEmail('');\n        setPassword('');\n    }\n\n    const emailId = nanoid();\n    const passwdId = nanoid();\n\n    return (<Center w={'100%'} h={'100%'} pt={'100px'} pb={'70px'}>\n        <FormControl as='form' w={'inherit'} autoComplete=\"on\" onSubmit={handleSubmit}>\n            <Flex\n                direction={'column'}\n                gap={'10px'}\n                justifyContent={'center'}\n                align={'center'}\n                m={0}>\n\n                <Heading as={'h1'}>Log in</Heading>\n\n                <FormLabel htmlFor={emailId}>Email</FormLabel>\n                <StyledInput id={emailId} type={\"email\"} placeholder={\"Enter your email\"} name={\"email\"} value={email} onChange={handleChange} />\n\n                <FormLabel htmlFor={passwdId}>Password</FormLabel>\n                <InputGroup maxW={{ base: '350px', md: '400px', xl: '550px' }}>\n                    <StyledInput\n                        type={show ? 'text' : 'password'}\n                        placeholder={\"Enter your password\"}\n                        name={'password'} value={password}\n                        onChange={handleChange}\n                        minLength={7} \n                        id={passwdId}/>\n\n                    {password !== '' && <InputRightElement width='4.5rem' top={'50%'} transform={'translateY(-50%)'}>\n                        <Button h='1.75rem' size='sm' onClick={handleShow} colorScheme=\"teal\" variant={'outline'}>\n                            {show ? 'Hide' : 'Show'}\n                        </Button>\n                    </InputRightElement>}\n                </InputGroup>\n                <Button\n                    size={'lg'}\n                    colorScheme=\"teal\"\n                    variant={\"solid\"}\n                    mt={'20px'}\n                    w={'180px'}\n                    type=\"submit\">Log in</Button>\n            </Flex>\n        </FormControl>\n    </Center>)\n}\n\nexport default Login;\n"],"names":["StyledInput","type","placeholder","name","value","onChange","pattern","minLength","id","I","required","colorScheme","variant","focusBorderColor","maxW","base","md","xl","fontSize","p","h","border","borderColor","outline","_hover","useState","email","setEmail","password","setPassword","show","setShow","dispatch","useDispatch","useSelector","selectIsLoggedIn","to","handleChange","target","reset","emailId","nanoid","passwdId","w","pt","pb","as","autoComplete","onSubmit","e","preventDefault","user","console","log","UserLogIn","direction","gap","justifyContent","align","m","htmlFor","width","top","transform","size","onClick","mt"],"sourceRoot":""}