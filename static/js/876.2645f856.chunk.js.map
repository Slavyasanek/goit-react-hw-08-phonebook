{"version":3,"file":"static/js/876.2645f856.chunk.js","mappings":"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","sources":["components/StyledInput/StyledInput.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Input } from \"@chakra-ui/react\"\n\nexport const StyledInput = ({ type, placeholder, name, value, onChange, pattern, minLength, id }) => {\n    return (<>\n        <Input type={type} required\n            colorScheme=\"teal\"\n            variant={'outline'}\n            placeholder={placeholder}\n            focusBorderColor=\"teal.500\"\n            maxW={{ base: '350px', md: '400px', xl: '550px' }}\n            fontSize={'20px'}\n            p={'15px 20px'}\n            h={'60px'}\n            border={'2px'}\n            borderColor={'teal.200'}\n            outline={'none'}\n            _hover={{\n                borderColor: 'teal.300'\n            }} \n            name={name}\n            value={value}\n            onChange={onChange}\n            pattern={pattern}\n            minLength={minLength}\n            id={id}/>\n    </>)\n}","import { Button, FormControl, FormLabel, Flex, Box, Heading } from \"@chakra-ui/react\";\nimport { StyledInput } from \"components/StyledInput/StyledInput\";\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { BsFillTelephonePlusFill } from 'react-icons/bs'\nimport {PiMagicWandLight} from 'react-icons/pi'\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n\n    const nameId = nanoid();\n    const phoneId = nanoid();\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const handleChange = ({ target }) => {\n        if (target.name === 'name') {\n            setName(target.value);\n        } else if (target.name === 'phone') {\n            setPhone(target.value);\n        }\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase() || contact.number === phone)) {\n            alert(`${name} is already in contacts`);\n            reset();\n            return;\n        }\n        const number = phone;\n        dispatch(addContact({ name, number }));\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setPhone('');\n    }\n\n    return (\n        <FormControl as={'form'} onSubmit={handleSubmit}>\n            <Flex\n                direction={'column'}\n                justifyContent={'center'}\n                align={'center'}\n                gap={2}\n                m={0}>\n                <Heading as=\"h3\"\n                    color={'teal.700'}\n                    textAlign={\"center\"}\n                    fontSize={{\n                        base: '16px',\n                        md: '20px'\n                    }}\n                    maxW={{\n                        base: '300px',\n                        md: '400px'\n                    }}\n                    display={\"flex\"} flexDirection={'row'}><Box as={PiMagicWandLight} size={'24px'} flexShrink={0}/>Creating your own phonebook is simplier than you can imagine</Heading>\n                <FormLabel htmlFor={nameId} m={0}>Name</FormLabel>\n                <StyledInput id={nameId}\n                    value={name}\n                    onChange={handleChange}\n                    type={\"text\"}\n                    placeholder={\"Enter name\"}\n                    name={\"name\"}\n                    pattern={\"^[A-Za-z\\u0080-\\uFFFF ']+$\"} />\n                <FormLabel htmlFor={phoneId} m={0}>Phone Number</FormLabel>\n                <StyledInput id={phoneId}\n                    value={phone}\n                    onChange={handleChange}\n                    type={\"tel\"}\n                    pattern={\"^(+?[0-9.]*)$\"}\n                    placeholder={\"Write phone number\"}\n                    name={\"phone\"} />\n                <Button\n                    colorScheme=\"teal\"\n                    variant={'outline'}\n                    mt={'5px'}\n                    w={'200px'}\n                    _hover={{\n                        bgColor: 'teal.100'\n                    }}\n                    gap={'10px'}\n                    type=\"submit\" ><Box as={BsFillTelephonePlusFill} \n                    size={'24px'} /> Add Contact</Button>\n            </Flex>\n        </FormControl>)\n};\n","import { Button, Tag, WrapItem, Box } from \"@chakra-ui/react\";\nimport {RiDeleteBin5Line} from 'react-icons/ri'\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\n\nexport const ContactItem = ({name, number, id}) => {\n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(id));\n    \n    return (<WrapItem w={'100%'} position={'relative'}>\n        <Tag \n            variant={'subtle'} \n            colorScheme=\"teal\" \n            color={'gray.500'}\n            mr={'8px'}\n            size={{base: 'sm', md: 'md', xl: 'lg'}}>\n                {name}</Tag>\n        <Tag \n            variant={'outline'} \n            colorScheme=\"teal\"\n            size={{base: 'sm', md: 'md', xl: 'lg'}}>{number}</Tag>\n        <Button onClick={handleDelete}\n                colorScheme=\"teal\"\n                borderRadius={'50%'}\n                w={{base: '30px', md: '35px'}}\n                h={{base: '30px', md: '35px'}}\n                minW={'30px'}\n                p={0}\n                position={'absolute'}\n                right={0}\n                top={'50%'}\n                transform={'translateY(-50%)'}><Box as={RiDeleteBin5Line} size={'20px'}/></Button>\n    </WrapItem>)\n};\n","import { Alert, Wrap } from \"@chakra-ui/react\";\nimport { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { useSelector } from \"react-redux\";\nimport { selectFilteredContacts } from \"redux/contacts/selectors\"\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectFilteredContacts);\n\n    if (contacts.length === 0) {\n        return (<Alert status=\"error\" colorScheme=\"teal\">No matches found</Alert>)\n    } else {\n        return (<Wrap\n            w={'100%'}\n            spacing={{\n                base: '14px',\n                md: '18px'\n            }}>\n            {contacts.map(contact =>\n                <ContactItem\n                    key={contact.id}\n                    name={contact.name}\n                    number={contact.number}\n                    id={contact.id} />)}\n        </Wrap>)\n    }\n}","import { FormLabel, Input } from \"@chakra-ui/react\";\nimport { useDispatch } from \"react-redux\";\nimport { setFilter } from \"redux/contacts/slice\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        dispatch(setFilter(e.target.value))\n    }\n\n    return (\n        <>\n            <FormLabel>Find contacts by name</FormLabel>\n            <Input type=\"text\"\n                name=\"filter\"\n                onChange={handleChange} />\n        </>\n    )\n};\n","import { Center, Box } from \"@chakra-ui/react\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { selectIsLoggedIn, selectIsRefreshing } from \"redux/auth/selectors\";\nimport { fetchContacts } from \"redux/contacts/operations\";\n\nconst Contacts = () => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    const isRefreshing = useSelector(selectIsRefreshing);\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch])\n\n    if (!isLoggedIn && !isRefreshing) {\n        return <Navigate to='/login'/>\n    }\n    return (<Center pt={{base: '30px', md: '40px'}} pb={'100px'} flexDirection={'column'} >\n        <Box bg={'white'} p={'20px'} borderRadius={\"8px\"} border={\"2px\"} borderColor={'teal.300'} w={{base: '344px', md: '444px'}}>\n        <ContactForm/>\n        </Box>\n        <Box mb={'20px'} mt={'20px'}>\n            <Filter/>\n        </Box>\n        <Box w={{base: '344px', md: '444px'}} bg={'white'} p={'20px'} borderRadius={\"8px\"} border={\"2px\"} borderColor={'teal.300'}>\n            <ContactList/>\n        </Box>\n    </Center>)\n}\n\nexport default Contacts;"],"names":["StyledInput","type","placeholder","name","value","onChange","pattern","minLength","id","I","required","colorScheme","variant","focusBorderColor","maxW","base","md","xl","fontSize","p","h","border","borderColor","outline","_hover","ContactForm","useState","setName","phone","setPhone","nameId","nanoid","phoneId","dispatch","useDispatch","contacts","useSelector","selectContacts","handleChange","target","reset","as","onSubmit","e","preventDefault","find","contact","toLowerCase","number","alert","addContact","direction","justifyContent","align","gap","m","color","textAlign","display","flexDirection","PiMagicWandLight","size","flexShrink","htmlFor","mt","w","bgColor","BsFillTelephonePlusFill","ContactItem","position","mr","onClick","deleteContact","borderRadius","minW","right","top","transform","RiDeleteBin5Line","ContactList","selectFilteredContacts","length","status","spacing","map","Filter","setFilter","isLoggedIn","selectIsLoggedIn","isRefreshing","selectIsRefreshing","useEffect","fetchContacts","pt","pb","bg","mb","to"],"sourceRoot":""}